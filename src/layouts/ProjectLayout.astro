---
import BaseLayout from '@layouts/BaseLayout.astro';
import { machineDate, readableDate } from '@scripts/dates';
import '@styles/prism-duotone-forest.css';

const { content } = Astro.props;
---

<BaseLayout 
	title={content.title}
	description={content.description}
	type="article" section="Project"
	datePublished={machineDate(content.published)}
	dateModified={content.modified ? machineDate(content.modified) : ''}
	tags={content.tags}
>
	<article>
		<header class="wrapper">
			<h1>
				{content.title}
			</h1>
			<p class="lede">
				<strong>Roles:</strong>&nbsp;
				<span class="roles">{content.tags.map((tag) => <span>{tag}</span><span class="divider">&nbsp;&middot;&nbsp;</span>)}</span>
				<br />
				<strong>Period:</strong>&nbsp;
				{content.period.from}{(content.period.to) && <span>&ndash;{content.period.to}</span>}
			</p>
			<div class="full-bleed">
				<Img
					src={content.image.href}
					alt={content.image.alt}
					preload="avif"
					loading="eager"
				/>
			</div>
		</header>
		<main class="wrapper">
			<slot />
		</main>
		<footer class="wrapper">
			<small>
				<div>
					Posted on <time datetime={machineDate(content.published)}>{readableDate(content.published)}</time>
					{(content.modified) && (
						<span>
							&middot; Updated on <time datetime={machineDate(content.modified)}>{readableDate(content.modified)}</time>
						</span>
					)}
				</div>
				{(content.tags) && (
					<div class="tags">
						{content.tags.map((tag) =>
							<span>#{tag}</span>
						)}
					</div>
				)}
			</small>
		</footer>
	</article>
</BaseLayout>

<style>
	.lede {
		margin-block: 1em;
	}

	.divider:last-child {
		display: none;
	}
</style>
